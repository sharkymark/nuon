replicaCount: 1

# since tls is terminated at alb
tls:
  secretNames: []

serviceAccount:
  workspacePerms: true
  enableDeployments: true

# letting nuon handle alb and routing to coder service and port
ingress:
  enabled: false
  # if you want to use the ingress, uncomment the following lines
  # and set the annotations as needed
  # annotations:
  #   kubernetes.io/ingress.class: "alb"
  #   alb.ingress.kubernetes.io/scheme: internet-facing
  #   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
  #   alb.ingress.kubernetes.io/certificate-arn: "{{ .nuon.components.certificate.outputs.public_domain_certificate_arn }}"
  #   alb.ingress.kubernetes.io/target-type: ip

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
      
  sessionAffinity: None # Already default, but good to confirm.
  loadBalancerIP: ""
  loadBalancerClass: ""
  annotations: {} # No annotations needed here for ALB provisioning
  httpNodePort: "" # Irrelevant with ClusterIP
  httpsNodePort: "" # Irrelevant with ClusterIP    

externalTrafficPolicy: Local

envUseClusterAccessURL: false

coder:
  env:
    - name: CODER_PG_CONNECTION_URL
      valueFrom:
        secretKeyRef:
          name: coder-db-url
          key: url
    - name: CODER_ACCESS_URL
      value: "https://coder.{{.nuon.install.sandbox.outputs.public_domain.name}}"
    - name: CODER_WILDCARD_ACCESS_URL
      value: "*.coder.{{.nuon.install.sandbox.outputs.public_domain.name}}"
    - name: CODER_SWAGGER_ENABLE
      value: "true"
    - name: CODER_TELEMETRY_ENABLE
      value: "true"
    - name: CODER_REDIRECT_TO_ACCESS_URL
      value: "true"
    - name: CODER_MAX_TOKEN_LIFETIME
      value: "8760h0m0s"
    - name: CODER_SESSION_DURATION
      value: "168h0m0s"
